To perform a basic health check on an Ubuntu server, you can write a shell script that checks various system metrics and services. Here's an example of a Linux shell script that performs a basic health check:

```bash
#!/bin/bash

# Check CPU load average
cpu_load=$(uptime | awk '{print $10}')
echo "CPU Load Average: $cpu_load"

# Check memory usage
memory_usage=$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')
echo "Memory Usage: $memory_usage"

# Check disk usage
disk_usage=$(df -h | awk '$NF=="/"{printf "%s", $5}')
echo "Disk Usage: $disk_usage"

# Check network connectivity
ping -c 3 google.com > /dev/null
if [ $? -eq 0 ]; then
    echo "Network Connectivity: OK"
else
    echo "Network Connectivity: Failed"
fi

# Check specific services (e.g., SSH, HTTP)
service_status=$(systemctl is-active ssh)
if [ "$service_status" = "active" ]; then
    echo "SSH Service: Running"
else
    echo "SSH Service: Not Running"
fi

service_status=$(systemctl is-active apache2)
if [ "$service_status" = "active" ]; then
    echo "HTTP Service: Running"
else
    echo "HTTP Service: Not Running"
fi
```

You can save this script to a file (e.g., `health_check.sh`), make it executable (`chmod +x health_check.sh`), and run it (`./health_check.sh`) to perform the health check on the Ubuntu server.

Note that this is a basic example, and you can customize the script to include additional checks based on your specific requirements.