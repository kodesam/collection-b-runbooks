Sure! Here's an example of how you can create a deployment for a web app with 3 replicas, along with the necessary configurations in an OpenShift cluster using Ansible:

```yaml
---
- name: Deploy Web App in OpenShift
  hosts: localhost
  gather_facts: false
  vars:
    project_name: vodafone-app
    deployment_name: webapp-deployment
    app_image: ngnix:latest
    replicas: 3
    secrets:
      - name: db-creds
        data:
          username: db_user
          password: db_password
    configmap:
      - name: app-config
        data:
          app_url: http://vodafone-app.com
    service:
      name: webapp-service
      ports:
        - name: http
          port: 80
          targetPort: 8080
      selector:
        app: webapp
    route:
      name: webapp-route
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      spec:
        to:
          kind: Service
          name: webapp-service
  tasks:
    - name: Create project
      k8s:
        api_version: v1
        kind: Namespace
        name: "{{ project_name }}"
        state: present

    - name: Create secrets
      k8s:
        api_version: v1
        kind: Secret
        namespace: "{{ project_name }}"
        name: "{{ item.name }}"
        data: "{{ item.data }}"
      with_items: "{{ secrets }}"
      
    - name: Create config map
      k8s:
        api_version: v1
        kind: ConfigMap
        namespace: "{{ project_name }}"
        name: "{{ item.name }}"
        data: "{{ item.data }}"
      with_items: "{{ configmap }}"

    - name: Create deployment
      k8s:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ project_name }}"
        name: "{{ deployment_name }}"
        spec:
          replicas: "{{ replicas }}"
          selector:
            matchLabels:
              app: webapp
          template:
            metadata:
              labels:
                app: webapp
            spec:
              containers:
                - name: webapp
                  image: "{{ app_image }}"
                  ports:
                    - containerPort: 8080
                  envFrom:
                    - secretRef:
                        name: db-creds
                  envFrom:
                    - configMapRef:
                        name: app-config

    - name: Create service
      k8s:
        api_version: v1
        kind: Service
        namespace: "{{ project_name }}"
        name: "{{ service.name }}"
        spec:
          ports:
            - port: "{{ service.ports.port }}"
              targetPort: "{{ service.ports.targetPort }}"
          selector:
            app: webapp

    - name: Create route
      k8s:
        api_version: v1
        kind: Route
        namespace: "{{ project_name }}"
        name: "{{ route.name }}"
        spec:
          tls:
            termination: "{{ route.tls.termination }}"
            insecureEdgeTerminationPolicy: "{{ route.tls.insecureEdgeTerminationPolicy }}"
          to:
            kind: Service
            name: "{{ service.name }}"
```

In this example, you can define the project name, deployment name, image name, number of replicas, secrets, config map, service, and route according to your requirements. You can save this code in a file like `deploy_webapp.yaml` and run it using the `ansible-playbook deploy_webapp.yaml` command.
