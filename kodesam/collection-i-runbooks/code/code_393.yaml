Here's an example of a Kubernetes YAML file that creates a pod, namespace, secrets, configmap, services, and a route for a web application:

```yaml
# Create the namespace
apiVersion: v1
kind: Namespace
metadata:
  name: my-namespace

---

# Create secrets to store sensitive data
apiVersion: v1
kind: Secret
metadata:
  name: my-secrets
  namespace: my-namespace
data:
  username: <base64_encoded_username>
  password: <base64_encoded_password>

---

# Create a config map to store application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
  namespace: my-namespace
data:
  app.conf: |
    key1: value1
    key2: value2

---

# Create a deployment with 3 replicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webapp
  namespace: my-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: my-webapp
        image: nginx:latest
        ports:
        - containerPort: 80

---

# Create a service to expose the deployment
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: my-namespace
spec:
  selector:
    app: webapp
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

---

# Create a route to access the service externally
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: my-route
  namespace: my-namespace
spec:
  to:
    kind: Service
    name: my-service
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

```

In this example, the YAML file defines a Kubernetes namespace, secrets, configmap, deployment, service, and route. The deployment specifies a replica set of 3 instances of the Nginx image. The service exposes the deployment on port 80, and the route allows external access to the service. You can modify the YAML file based on your application's specific requirements.