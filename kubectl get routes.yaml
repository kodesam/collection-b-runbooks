To use `kubectl` command in an Ansible playbook, you need to utilize the `shell` module. Here is an example of how to use `kubectl get routes` command in an Ansible playbook:

```yaml
- name: Execute kubectl get routes
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Run kubectl get routes
      become: true
      shell:
        cmd: kubectl get routes
      register: kubectl_output
      
    - name: Print kubectl output
      debug:
        var: kubectl_output.stdout_lines
```

In this playbook, the `shell` module is used to execute the `kubectl get routes` command. The output of the command is then registered in the `kubectl_output` variable. Finally, the output is printed using the `debug` module.

Make sure you have `kubectl` installed and configured properly on the target machine before running this playbook.